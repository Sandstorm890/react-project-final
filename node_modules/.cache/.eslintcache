[{"/home/zaynegoering/code/projects/react-project/src/index.js":"1","/home/zaynegoering/code/projects/react-project/src/App.js":"2","/home/zaynegoering/code/projects/react-project/src/reportWebVitals.js":"3","/home/zaynegoering/code/projects/react-project/src/components/RecipeCard.js":"4","/home/zaynegoering/code/projects/react-project/src/actions/recipeActions.js":"5","/home/zaynegoering/code/projects/react-project/src/reducers/recipeReducer.js":"6","/home/zaynegoering/code/projects/react-project/src/components/RecipeForm.js":"7","/home/zaynegoering/code/projects/react-project/src/components/RecipeShow.js":"8","/home/zaynegoering/code/projects/react-project/src/containers/RecipesContainer.js":"9","/home/zaynegoering/code/projects/react-project/src/components/Header.js":"10","/home/zaynegoering/code/projects/react-project/src/components/RecipeArchiveShow.js":"11"},{"size":883,"mtime":1616114858910,"results":"12","hashOfConfig":"13"},{"size":2147,"mtime":1618366570740,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1615846030530,"results":"15","hashOfConfig":"13"},{"size":430,"mtime":1618366095720,"results":"16","hashOfConfig":"13"},{"size":1443,"mtime":1618359484260,"results":"17","hashOfConfig":"13"},{"size":552,"mtime":1618359500490,"results":"18","hashOfConfig":"13"},{"size":2054,"mtime":1617387765240,"results":"19","hashOfConfig":"13"},{"size":1024,"mtime":1617323422830,"results":"20","hashOfConfig":"13"},{"size":1634,"mtime":1618367386170,"results":"21","hashOfConfig":"13"},{"size":527,"mtime":1617323281960,"results":"22","hashOfConfig":"13"},{"size":1070,"mtime":1618366667780,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"10wm0oi",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/zaynegoering/code/projects/react-project/src/index.js",[],["49","50"],"/home/zaynegoering/code/projects/react-project/src/App.js",[],"/home/zaynegoering/code/projects/react-project/src/reportWebVitals.js",[],"/home/zaynegoering/code/projects/react-project/src/components/RecipeCard.js",["51"],"import { Link } from 'react-router-dom';\n\n\nfunction RecipeCard(props)  {\n    // console.log(props.id)\n    return(\n        <div id={'recipe-card-' + props.id}>\n            <h2>{props.name}</h2>\n            <Link to={`/recipes/archive/${props.id}`}><img src={props.image} className=\"recipe-image img-thumbnail img-fluid\" alt=\"Image Not Found\"/></Link>\n            <br></br><br></br>\n        </div>\n    )\n}\n\nexport default RecipeCard","/home/zaynegoering/code/projects/react-project/src/actions/recipeActions.js",[],"/home/zaynegoering/code/projects/react-project/src/reducers/recipeReducer.js",[],"/home/zaynegoering/code/projects/react-project/src/components/RecipeForm.js",[],"/home/zaynegoering/code/projects/react-project/src/components/RecipeShow.js",["52"],"import React from 'react' \nimport { connect } from 'react-redux'\nimport { deleteRecipe } from '../actions/recipeActions'\n\nclass RecipeShow extends React.Component {\n    \n\n    render() {\n        return(\n            <>\n                <h2 className=\"float-left pl-4 \">{this.props.recipe.name}</h2><br></br><br></br>\n                <img src={this.props.recipe.img_url} alt=\"Image not found\" className=\"rounded float-left img-thumbnail img-fluid ml-4 mr-4\"></img>\n                <h3>Category: {this.props.recipe.category.name}</h3>\n                <p className=\"font-weight-bold\">Description</p>\n                <p className=\"text-break\">{this.props.recipe.description}</p>\n                <a href='/recipes' className=\"text-danger\" onClick={deleteRecipe(this.props)}>DELETE RECIPE</a>\n            </>\n        )\n    }\n}\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        delete: (recipe) => dispatch({type: \"DELETE_RECIPE\", payload: recipe})\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(RecipeShow)","/home/zaynegoering/code/projects/react-project/src/containers/RecipesContainer.js",[],"/home/zaynegoering/code/projects/react-project/src/components/Header.js",[],"/home/zaynegoering/code/projects/react-project/src/components/RecipeArchiveShow.js",["53"],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":9,"column":55,"nodeType":"60","endLine":9,"endColumn":150},{"ruleId":"58","severity":1,"message":"59","line":12,"column":17,"nodeType":"60","endLine":12,"endColumn":141},{"ruleId":"58","severity":1,"message":"59","line":13,"column":17,"nodeType":"60","endLine":13,"endColumn":146},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]